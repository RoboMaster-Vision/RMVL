# ns                   name            args                    retval
##################################### core #####################################
rm                     version         ""                      [[version_string]]
rm::Timer              Timer           ""                      [[con]]
rm::Timer              reset           ""                      None
rm::Timer              now             ""                      [[Current_Time]]
rm::ImuData            write           output_file,datas       None
rm::ImuData            read            input_file,datas        None

################################## algorithm ###################################
rm::Polynomial         Polynomial      coeffs                  [[con]]
rm::Polynomial         [[call]]        x                       fval
rm::Interpolator       Interpolator    ""                      [[con]]
rm::Interpolator       Interpolator    xs,ys                   [[con]]
rm::Interpolator       add             x,y                     [[this]]
rm::Interpolator       [[call]]        x                       fval
rm::CurveFitter        CurveFitter     xs,ys,order             [[con]]
rm::CurveFitter        [[call]]        x                       fval
rm::NonlinearSolver    NonlinearSolver ""                      [[con]]
rm::NonlinearSolver    NonlinearSolver f                       [[con]]
rm::NonlinearSolver    [[call]]        x0[,eps[,max_iter]]     fval
rm::RungeKutta         RungeKutta      fs,p,lambda,r           [[con]]
rm::RungeKutta         init            t0,x0                   None
rm::RungeKutta         solve           h,n                     [[List_of_x]]
rm::RungeKutta2        RungeKutta2     fs                      [[con]]
rm::RungeKutta3        RungeKutta3     fs                      [[con]]
rm::RungeKutta4        RungeKutta4     fs                      [[con]]
rm                     derivative      func,x[,mode[,dx]]      grad
rm                     grad            func,x[,mode[,dx]]      grad
rm                     region          func,x0[,delta]         a,b
rm                     fminbnd         func,x1,x2[,options]    x,fval
rm                     fminunc         func,x0[,options]       x,fval
rm                     fmincon         func,x0,c,ceq[,options] x,fval
rm                     lsqnonlin       funcs,x0[,options]      x
rm                     lsqnonlinRKF    funcs,x0,rb[,options]   x
rm                     dft             xt                      Xf
rm                     idft            Xf                      xt
rm                     Gx              x,type                  G
rm                     draw            datas,color             img
rm                     binary          src,ch1,ch2,threshold   bin
rm                     binary          src,threshold           bin
rm                     calculateRelativeAngle  cameraMatrix,center               angle
rm                     calculateRelativeCenter cameraMatrix,angle                center
rm                     cameraConvertToPixel    cameraMatrix,distCoeffs,center3d  pixel

#################################### camera ####################################
rm::HikCamera          HikCamera       init_mode[,serial]      [[con]]
rm::HikCamera          set             propId[,value]          [[success_?]]
rm::HikCamera          get             propId                  value
rm::HikCamera          isOpened        ""                      [[opened_?]]
rm::HikCamera          read            ""                      res,img
rm::HikCamera          reconnect       ""                      [[success_?]]
rm::MvCamera           MvCamera        init_mode[,serial]      [[con]]
rm::MvCamera           set             propId[,value]          [[success_?]]
rm::MvCamera           get             propId                  value
rm::MvCamera           isOpened        ""                      [[opened_?]]
rm::MvCamera           read            ""                      res,img
rm::MvCamera           reconnect       ""                      [[success_?]]
rm::OptCamera          OptCamera       init_mode[,handle_info] [[con]]
rm::OptCamera          set             propId[,value]          [[success_?]]
rm::OptCamera          get             propId                  value
rm::OptCamera          isOpened        ""                      [[opened_?]]
rm::OptCamera          read            ""                      res,img
rm::OptCamera          reconnect       ""                      [[success_?]]
rm::GalaxyCamera       GalaxyCamera    init_mode[,serial]      [[con]]
rm::GalaxyCamera       set             propId[,value]          [[success_?]]
rm::GalaxyCamera       get             propId                  value
rm::GalaxyCamera       isOpened        ""                      [[opened_?]]
rm::GalaxyCamera       read            ""                      res,img
rm::GalaxyCamera       reconnect       ""                      [[success_?]]

#################################### light #####################################
rm::OPTLightController OPTLightController ""                  [[con]]
rm::OPTLightController connect            ip_config           [[Success_?]]
rm::OPTLightController connect            SN                  [[Success_?]]
rm::OPTLightController disconnect         ""                  [[Success_?]]
rm::OPTLightController openChannels       channels            [[Success_?]]
rm::OPTLightController openAllChannels    ""                  [[Success_?]]
rm::OPTLightController closeChannels      channels            [[Success_?]]
rm::OPTLightController closeAllChannels   ""                  [[Success_?]]
rm::OPTLightController getIntensity       channel             intensity
rm::OPTLightController setIntensity       channel,intensity   [[Success_?]]
rm::OPTLightController trigger            channel,time        [[Success_?]]

#################################### opcua #####################################
rm::NodeId             NodeId                       ns,numeric                       [[con]]
rm::NodeId             [[eq]]                       node_id                          [[Is_Equal_?]]
rm::NodeId             [[ne]]                       node_id                          [[Is_Not_Equal_?]]
rm::NodeId             empty                        ""                               [[Is_Empty_?]]
rm::NodeId             clear                        ""                               None
rm::DataType           DataType                     id                               [[con]]
rm::VariableType       VariableType                 ""                               [[con]]
rm::VariableType       VariableType                 val                              [[con]]
rm::VariableType       cast                         ""                               [[Real_Type_Value]]
rm::VariableType       getDataType                  ""                               [[DataType]]
rm::VariableType       empty                        ""                               [[Is_Empty_?]]
rm::VariableType       size                         ""                               [[Size]]
rm::Variable           Variable                     ""                               [[con]]
rm::Variable           Variable                     val                              [[con]]
rm::Variable           cast                         ""                               [[Real_Type_Value]]
rm::Variable           type                         ""                               [[VariableType]]
rm::Variable           getDataType                  ""                               [[DataType]]
rm::Variable           empty                        ""                               [[Is_Empty_?]]
rm::Variable           size                         ""                               [[Size]]
rm::Method             Method                       ""                               [[con]]
rm::Method             Method                       cb                               [[con]]
rm::ObjectType         ObjectType                   ""                               [[con]]
rm::ObjectType         add                          variable                         None
rm::ObjectType         [[get]]                      browse_name                      variable
rm::ObjectType         [[set]]                      browse_name,variable             None
rm::ObjectType         add                          method                           None
rm::ObjectType         empty                        ""                               [[Is_Empty_?]]
rm::ObjectType         getVariables                 ""                               variables_map
rm::ObjectType         getMethods                   ""                               methods_map
rm::Object             Object                       ""                               [[con]]
rm::Object             makeFrom                     otype                            [[this]]
rm::Object             type                         ""                               [[ObjectType]]
rm::Object             add                          variable                         None
rm::Object             add                          method                           None
rm::Object             [[get]]                      browse_name                      variable
rm::Object             [[set]]                      browse_name,variable             None
rm::Object             empty                        ""                               [[Is_Empty_?]]
rm::Object             getVariables                 ""                               variables_map
rm::Object             getMethods                   ""                               methods_map
rm::EventType          EventType                    ""                               [[con]]
rm::EventType          add                          browse_name,prop                 None
rm::EventType          [[get]]                      browse_name                      prop
rm::EventType          [[set]]                      browse_name,prop                 None
rm::EventType          data                         ""                               prop_map
rm::Event              Event                        ""                               [[con]]
rm::Event              makeFrom                     etype                            [[this]]
rm::Event              add                          browse_name,prop                 None
rm::Event              [[get]]                      browse_name                      prop
rm::Event              [[set]]                      browse_name,prop                 None
rm::Event              data                         ""                               prop_map
rm::Event              type                         ""                               [[EventType]]
rm::View               View                         ""                               [[con]]
rm::View               add                          *args                            None
rm::View               data                         ""                               nds
rm::ServerView         ServerView                   ""                               [[con]]
rm::ServerView         find                         browse_path[,src_nd]             nd
rm::ServerView         read                         nd                               val
rm::ServerView         write                        nd,val                           [[success_?]]
rm::ServerView         triggerEvent                 nd,event                         [[success_?]]
rm::Server             Server                       port[,name[,users]]              [[con]]
rm::Server             find                         browse_path[,src_nd]             nd
rm::Server             spinOnce                     ""                               None
rm::Server             shutdown                     ""                               None
rm::Server             addVariableTypeNode          vtype                            nd
rm::Server             addVariableNode              val[,parent_nd]                  nd
rm::Server             addVariableNodeValueCallback nd,before_read,after_write       [[success_?]]
rm::Server             addDataSourceVariableNode    val,on_read,on_write[,parent_nd] nd
rm::Server             read                         node                             val
rm::Server             write                        node,val                         [[success_?]]
rm::Server             addMethodNode                method[,parent_nd]               nd
rm::Server             setMethodNodeCallBack        nd,on_method                     [[success_?]]
rm::Server             addObjectTypeNode            otype                            nd
rm::Server             addObjectNode                obj[,parent_nd]                  nd
rm::Server             addViewNode                  view                             nd
rm::Server             addEventTypeNode             etype                            nd
rm::Server             triggerEvent                 nd,event                         [[success_?]]
rm::ServerTimer        ServerTimer                  sv,period,callback               [[con]]
rm::ServerTimer        cancel                       ""                               None
rm::ClientView         ClientView                   ""                               [[con]]
rm::ClientView         find                         browse_path[,src_nd]             nd
rm::ClientView         read                         nd                               val
rm::ClientView         write                        nd,val                           [[success_?]]
rm::Client             Client                       address[,user]                   [[con]]
rm::Client             ok                           ""                               [[Is_Connected_?]]
rm::Client             find                         browse_path[,src_nd]             nd
rm::Client             spinOnce                     ""                               None
rm::Client             shutdown                     ""                               [[success_?]]
rm::Client             read                         node                             val
rm::Client             write                        node,val                         [[success_?]]
rm::Client             call                         obj_nd,name,inputs               res,outputs
rm::Client             call                         name,inputs                      res,outputs
rm::Client             addViewNode                  view                             nd
rm::Client             monitor                      nd,on_change[,q_size]            [[success_?]]
rm::Client             monitor                      nd,names,on_event                [[success_?]]
rm::Client             remove                       nd                               [[success_?]]
rm::ClientTimer        ClientTimer                  cv,period,callback               [[con]]
rm::ClientTimer        cancel                       ""                               None
rm::Publisher          Publisher                    pub_name,addr[,port[,users]]     [[con]]
rm::Publisher          publish                      datas,duration                   [[success_?]]
rm::FieldMetaData      makeFrom                     val                              [[this]]
rm::Subscriber         Subscriber                   sub_name,addr[,port[,users]]     [[con]]
rm::Subscriber         subscribe                    pub_name,fields                  nds

## others
